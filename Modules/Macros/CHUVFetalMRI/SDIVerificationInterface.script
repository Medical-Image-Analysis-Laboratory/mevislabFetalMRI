//----------------------------------------------------------------------------------
//! Macro module SDIVerificationInterface
/*!
// \file    SDIVerificationInterface.script
// \author  FetalMRI
// \date    2018-06-22
//
// 
*/
//----------------------------------------------------------------------------------



Interface {
  Inputs {
    Field inImageInfos { type = MLBase }
    Field ImageOrientationSucceed {type = MLBase}
  }
  Outputs {
    Field outImagesInfosStep2 { type = MLBase }
    Field outputSucceed {type = MLBase}
    Field viewer2DAxial {
      hidden       = yes
      internalName = OrthoView2DAxial.viewer.self
    }
    Field viewer2DCoronal {
      hidden       = yes
      internalName = OrthoView2DCoronal.viewer.self
    }
    Field viewer2DSagittal {
      hidden       = yes
      internalName = OrthoView2DSagittal.viewer.self
    }
  }
  Parameters {
    Field NumberImages {type = Int}
    Field outlierRejection { type = bool value = false}
    Field ExpertMode {type = Bool value = True}
    Field RegistrationMetric {internalName = mialImageReconstruction.MetricToUse}
    Field RegistrationGradient {internalName = mialImageReconstruction.GradientMagnitudeToleranceRegistration}
    Field RegistrationRelaxationFactor {internalName = mialImageReconstruction.RelaxationFactorRegistration}
    Field RegistrationMinStep {internalName = mialImageReconstruction.MinStepLengthRegistration}
    Field RegistrationMaxStep {internalName = mialImageReconstruction.MaxStepLengthRegistration}
    Field RegistrationNbIt {internalName = mialImageReconstruction.nbIterationsRegistration}
    Field kernelRadiusMultiplicator {internalName = mialImageReconstruction.resampleKernelMultiplicator}
    Field Lambda {internalName = mialTVSuperResolution.Lambda}
    Field DeltaT {internalName = mialTVSuperResolution.DeltaT}
    Field updateView {type = Trigger}
    Field FromFrontier {type = Bool value = False}
    Field NumberIteration {type = Int value = 1}
    Field RefImageFiled {type = Int value = 0}
    Field StatusField {type = String}
    Field BackgroundTaskRunning {type = Bool}
  }
}


Commands {
  source = $(LOCAL)/SDIVerificationInterface.py
  FieldListener itkImageFileReader.fileName {command = updateImage}
  FieldListener ImageOrientationSucceed {command = updateInterface}
  FieldListener mialImageReconstruction.outputSucceed {command = "py: insertImageReconstruction()"}
  FieldListener mialTVSuperResolution.outputSucceed {command = "py: insertTVSuperResolution()"}
  FieldListener mialRefineMask.outputSucceed {command = "py: insertRefinedMask()"}
  FieldListener mialsrtkMaskImage.outputSucceed {command = "py: insertMaskImage()"}
  FieldListener mialN4BiasField.outputSucceed {command = "py: insertN4BiasFieldCorrectedHRImage()"}
  FieldListener updateView {command = updateSDI}
  FieldListener mialImageReconstruction.inProgress {command = updateBackgroundTaskRunningField}
  FieldListener mialTVSuperResolution.inProgress {command = updateBackgroundTaskRunningField}
  FieldListener mialRefineMask.inProgress {command = updateBackgroundTaskRunningField}
  FieldListener mialsrtkMaskImage.inProgress {command = updateBackgroundTaskRunningField}
  FieldListener mialN4BiasField.inProgress {command = updateBackgroundTaskRunningField}
  
  FieldListener mialImageReconstruction.status {command = "py: updateBackgroundTaskStatus('mialImageReconstruction')"}
  FieldListener mialTVSuperResolution.status {command = "py: updateBackgroundTaskStatus('mialTVSuperResolution')"}
  FieldListener mialRefineMask.status {command = "py: updateBackgroundTaskStatus('mialRefineMask')"}
  FieldListener mialsrtkMaskImage.status {command = "py: updateBackgroundTaskStatus('mialsrtkMaskImage')"}
  FieldListener mialN4BiasField.status {command = "py: updateBackgroundTaskStatus('mialN4BiasField')"}
  
  //FieldListener RefImageFiled {command = updateRefImageReconstruction}
}

Description {
  Field NumberIteration {
  min = 1
  max = 4
}
  Field RefImageFiled {
  min = 0
  max = NumberImages-1
  }
}


Window SDIVerificationInterface {
  Splitter {
    direction = horizontal
    Splitter {
      direction = vertical
      
      Box {
        GraphicsView
        {
          name        = GraphicsView
          initCommand = initSDIVerificationGraphicsView
        
          //expandX = No
        }

        expandY = yes
        //expandX = No
    
        Box{
          //Horizontal {
          //  Label "refImage: should be the one with the less movement" {}
          //  NumberEdit RefImageFiled {step = 1 expandX = False}
          //}
          Horizontal {  
          Label "Registration parameters: " {}
          CheckBox outlierRejection {toggledCommand = OutlierRejectionStatusChanged enabled = False}
          ComboBox RegistrationMetric {tooltip = "Nc = Normalized Correlation, MI = Mutual Information, default = NC"}
            Label "Gradient" {}
            NumberEdit RegistrationGradient {step = 0.0001}
            Label "Min Step" {}
            NumberEdit RegistrationMinStep {step = 0.0001}
            Label "Max Step" {}
            NumberEdit RegistrationMaxStep {step = 0.001}
            Label "Nb It" {}
            NumberEdit RegistrationNbIt {step = 100}
            Label "Relaxation Factor" {}
            NumberEdit RegistrationRelaxationFactor { step = 0.05}
            Label "Radius Multiplicator" {}
            NumberEdit kernelRadiusMultiplicator {step = 0.1}
            dependsOn = ExpertMode}
          Horizontal { alignX = Left
            Label "StartIter :" {expandX = No}
            NumberEdit NumberIteration {step = 1 expandX = No }
            Button {title = "ReRun SDI Estimation" command = ReRunImageReconstruction dependsOn = !BackgroundTaskRunning}
          }
        }
        Box {
          Horizontal {
            Label "Lambda (default = 0.1): " {expandX = No}
            Slider Lambda {pageStep = 0.1}
            NumberEdit Lambda {
              step     = 0.01
              stepstep = 0.1
              format   = "%.2f"
            }
          }
          Horizontal {
            Label "DeltaT (default = 0.1): " {}
            Slider DeltaT {pageStep = 0.1 }
            NumberEdit DeltaT {
              step     = 0.01
              stepstep = 0.1
              format   = "%.2f"
            }
          }
        Horizontal { alignX = Left
          Label "StartIter :" {expandX = No}
          NumberEdit NumberIteration {step = 1 expandX = No }
          Button {title = "Run Super Resolution" command = RunSuperResolution dependsOn = !BackgroundTaskRunning}
        }
          

        }
        Horizontal {
          name=HorizontalBackgroundTask
          Label {title = "BackgroundTaskInfo" name = StatusField }
          Execute = "py: getHorizontalControl('BackgroundStatusLabel','HorizontalBackgroundTask')"
        }
        Horizontal {
          Button {title = "Help" command = showHelp}
        }
      }
      
      Box ViewerBoxAxial {
        title = ""
      
        Viewer viewer2DAxial {
          name            = viewerAxial
          clone           = NO
          preferredWidth  = 900
          preferredHeight = 500
        }
      
        EventFilter {
          filter  = "MouseButtonPress,KeyPress"
          control = viewerAxial 
          command = buttonPressedAxial
        }
        expandY = yes
      } 
      
    }
    
    Splitter {
      
      direction = vertical
      
      Box ViewerBoxCoronal {
        title = ""
      
        Viewer viewer2DCoronal {
          name            = viewerCoronal
          clone           = NO
          preferredWidth  = 900
          preferredHeight = 500
        }
      
        EventFilter {
          filter  = "MouseButtonPress,KeyPress"
          control = viewerCoronal 
          command = buttonPressedCoronal
        }
        expandY = yes
      } 
      
      Box ViewerBoxSagittal {
        title = ""
      
        Viewer viewer2DSagittal {
          name            = viewerSagittal
          clone           = NO
          preferredWidth  = 900
          preferredHeight = 500
        }
      
        EventFilter {
          filter  = "MouseButtonPress,KeyPress"
          control = viewerSagittal 
          command = buttonPressedSagittal
        }
        expandY = yes
      }
    }
  }
}


Window LeftSide {
  Splitter {
    direction = vertical
      
    Box {
      GraphicsView
      {
        name        = GraphicsView
        initCommand = initSDIVerificationGraphicsView
        
        //expandX = No
      }

      expandY = yes
      //expandX = No
    
      Box{
        //Horizontal {
        //  Label "refImage: should be the one with the less movement" {}
        //  NumberEdit RefImageFiled {step = 1 expandX = False}
        //}
        Horizontal {  
          Label "Registration parameters: " {}
          CheckBox outlierRejection {toggledCommand = OutlierRejectionStatusChanged enabled = False}
          ComboBox RegistrationMetric {tooltip = "Nc = Normalized Correlation, MI = Mutual Information, default = NC"}
          Label "Gradient" {}
          NumberEdit RegistrationGradient {step = 0.0001}
          Label "Min Step" {}
          NumberEdit RegistrationMinStep {step = 0.0001}
          Label "Max Step" {}
          NumberEdit RegistrationMaxStep {step = 0.001}
          Label "Nb It" {}
          NumberEdit RegistrationNbIt {step = 100}
          Label "Relaxation Factor" {}
          NumberEdit RegistrationRelaxationFactor { step = 0.05}
          Label "Radius Multiplicator" {}
          NumberEdit kernelRadiusMultiplicator {step = 0.1}
          dependsOn = ExpertMode}
        Horizontal { alignX = Left
          Label "StartIter :" {expandX = No}
          NumberEdit NumberIteration {step = 1 expandX = No }
          Button {title = "ReRun SDI Estimation" command = ReRunImageReconstruction dependsOn = !BackgroundTaskRunning}
        }
      }
      Box {
        Horizontal {
          Label "Lambda (default = 0.1): " {expandX = No}
          Slider Lambda {pageStep = 0.1}
          NumberEdit Lambda {
            step     = 0.01
            stepstep = 0.1
            format   = "%.2f"
          }
        }
        Horizontal {
          Label "DeltaT (default = 0.1): " {}
          Slider DeltaT {pageStep = 0.1 }
          NumberEdit DeltaT {
            step     = 0.01
            stepstep = 0.1
            format   = "%.2f"
          }
        }
        Horizontal { alignX = Left
          Label "StartIter :" {expandX = No}
          NumberEdit NumberIteration {step = 1 expandX = No }
          Button {title = "Run Super Resolution" command = RunSuperResolution dependsOn = !BackgroundTaskRunning}
        }
          

      }
      Horizontal {
        Label {title = "BackgroundTaskInfo" name = StatusField}
      }
      Horizontal {
        Button {title = "Help" command = showHelp}
      }
    }
      
    Box ViewerBoxAxial {
      title = ""
      
      Viewer viewer2DAxial {
        name            = viewerAxial
        clone           = NO
        preferredWidth  = 900
        preferredHeight = 500
      }
      
      EventFilter {
        filter  = "MouseButtonPress,KeyPress"
        control = viewerAxial 
        command = buttonPressedAxial
      }
      expandY = yes
    } 
      
  }

}

Window RightSide {
  Splitter {
      
    direction = vertical
      
    Box ViewerBoxCoronal {
      title = ""
      
      Viewer viewer2DCoronal {
        name            = viewerCoronal
        clone           = NO
        preferredWidth  = 900
        preferredHeight = 500
      }
      
      EventFilter {
        filter  = "MouseButtonPress,KeyPress"
        control = viewerCoronal 
        command = buttonPressedCoronal
      }
      expandY = yes
    } 
      
    Box ViewerBoxSagittal {
      title = ""
      
      Viewer viewer2DSagittal {
        name            = viewerSagittal
        clone           = NO
        preferredWidth  = 900
        preferredHeight = 500
      }
      
      EventFilter {
        filter  = "MouseButtonPress,KeyPress"
        control = viewerSagittal 
        command = buttonPressedSagittal
      }
      expandY = yes
    }
  }
  
}