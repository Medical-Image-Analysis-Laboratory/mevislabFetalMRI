//----------------------------------------------------------------------------------
//! Macro module SDIVerificationInterface
/*!
// \file    SDIVerificationInterface.script
// \author  FetalMRI
// \date    2018-06-22
//
// 
*/
//----------------------------------------------------------------------------------



Interface {
  Inputs {Field inImageInfos { type = MLBase }}
  Outputs {
    Field outImagesInfosStep2 { type = MLBase }
    Field viewer2DAxial {
      hidden       = yes
      internalName = OrthoView2DAxial.viewer.self
    }
    Field viewer2DCoronal {
      hidden       = yes
      internalName = OrthoView2DCoronal.viewer.self
    }
    Field viewer2DSagittal {
      hidden       = yes
      internalName = OrthoView2DSagittal.viewer.self
    }
  }
  Parameters {
    Field NumberImages {type = Int}
    Field outlierRejection { type = bool value = false}
    Field ExpertMode {type = Bool value = True}
    Field RegistrationMetric {internalName = mialImageReconstruction.MetricToUse}
    Field RegistrationGradient {internalName = mialImageReconstruction.GradientMagnitudeToleranceRegistration}
    Field RegistrationRelaxationFactor {internalName = mialImageReconstruction.RelaxationFactorRegistration}
    Field RegistrationMinStep {internalName = mialImageReconstruction.MinStepLengthRegistration}
    Field RegistrationMaxStep {internalName = mialImageReconstruction.MaxStepLengthRegistration}
    Field Gamma {internalName = mialTVSuperResolution.Lambda}
    Field DeltaT {internalName = mialTVSuperResolution.DeltaT}
    Field updateView {type = Trigger}
  }
}


Commands {
  source = $(LOCAL)/SDIVerificationInterface.py
  FieldListener itkImageFileReader.fileName {command = updateImage}
  FieldListener inImageInfos {command = updateSDI}
  FieldListener mialImageReconstruction.outputSucceed {command = "py: insertImageReconstruction()"}
  FieldListener mialTVSuperResolution.outputSucceed {command = "py: insertTVSuperResolution()"}
  FieldListener updateView {command = updateSDI}
  FieldListener mialRefineMask.outputSucceed {command = insertRefinedMask}
}

Window SDIVerificationInterface {
  Splitter {
    direction = horizontal
    Splitter {
      direction = vertical
      
      Box {
        GraphicsView
        {
          name        = GraphicsView
          initCommand = initSDIVerificationGraphicsView
        
          //expandX = No
        }

        expandY = yes
        //expandX = No
    
        Box{
          Horizontal {
          Label "Registration parameters: " {}
          CheckBox outlierRejection {toggledCommand = OutlierRejectionStatusChanged enabled = False}
          ComboBox RegistrationMetric {tooltip = "Nc = Normalized Correlation, MI = Mutual Information, default = NC"}
            Label "Gradient" {}
            NumberEdit RegistrationGradient {step = 0.0001}
            Label "Min Step" {}
            NumberEdit RegistrationMinStep {step = 0.0001}
            Label "Max Step" {}
            NumberEdit RegistrationMaxStep {step = 0.001}
            Label "Relaxation Factor" {}
            NumberEdit RegistrationRelaxationFactor { step = 0.05}
          }
          Horizontal {
            Button {title = "ReRun SDI Estimation" command = ReRunImageReconstruction}
          }
        }
        Box {
          Horizontal {
            Label "Gamma (default = 0.1): " {}
            Slider Gamma {pageStep = 0.1}
            NumberEdit Gamma {
              step     = 0.1
              stepstep = 1
              format   = "%.1f"
            }
          }
          Horizontal {
            Label "DeltaT (default = 1): " {}
            Slider DeltaT {pageStep = 0.1 }
            NumberEdit DeltaT {
              step     = 0.1
              stepstep = 1
              format   = "%.1f"
            }
          }
        Horizontal {
          Button {title = "Run Super Resolution" command = RunSuperResolution}
        }
          

        }
        Horizontal {
          Button {title = "Help" command = showHelp}
        }
      }
      
      Box ViewerBoxAxial {
        title = ""
      
        Viewer viewer2DAxial {
          name            = viewerAxial
          clone           = NO
          preferredWidth  = 900
          preferredHeight = 500
        }
      
        EventFilter {
          filter  = "MouseButtonPress,KeyPress"
          control = viewerAxial 
          command = buttonPressedAxial
        }
        expandY = yes
      } 
      
    }
    
    Splitter {
      
      direction = vertical
      
      Box ViewerBoxCoronal {
        title = ""
      
        Viewer viewer2DCoronal {
          name            = viewerCoronal
          clone           = NO
          preferredWidth  = 900
          preferredHeight = 500
        }
      
        EventFilter {
          filter  = "MouseButtonPress,KeyPress"
          control = viewerCoronal 
          command = buttonPressedCoronal
        }
        expandY = yes
      } 
      
      Box ViewerBoxSagittal {
        title = ""
      
        Viewer viewer2DSagittal {
          name            = viewerSagittal
          clone           = NO
          preferredWidth  = 900
          preferredHeight = 500
        }
      
        EventFilter {
          filter  = "MouseButtonPress,KeyPress"
          control = viewerSagittal 
          command = buttonPressedSagittal
        }
        expandY = yes
      }
    }
  }
}