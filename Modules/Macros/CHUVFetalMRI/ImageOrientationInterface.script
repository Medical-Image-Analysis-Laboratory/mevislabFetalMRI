//----------------------------------------------------------------------------------
//! Macro module ImageOrientationInterface
/*!
// \file    ImageOrientationInterface.script
// \author  FetalMRI
// \date    2018-01-16
//
// 
*/
//----------------------------------------------------------------------------------



Interface {
  Inputs {
    Field inImageInfos { type = MLBase }
  }
  Outputs {
    Field outImagesInfosStep1 { type = MLBase }
    //Field viewer2D    { internalName = RemoteRendering.output }
    Field viewer2D {
      hidden       = yes
      internalName = viewer.self
    }
    Field outputSucceed {type = MLBase}
    
  }
  Parameters {
    Field GestationalAge {internalName = GetAtlasMacro.currentWeek}
    Field AtlasPath {internalName = GetAtlasMacro.AtlasPath persistent = Yes}
    Field AtlasImage {internalName = GetAtlasMacro.name}
    Field NumberImages {type = Int value = 2}
    //Field cornerMenuIteraction {internalName = SyngoViaViewersMRCornerMenus.clickedMenuItem}
    Field fileSelectionCompleted {type = Trigger}
    Field resetAll {type = Trigger}
    Field pathImages {type = String}
    Field eventChoice {type = Int value = 0}
    Field resetZoomButton {type = Trigger}
    Field increaseNbImage {type = Trigger}
    Field decreaseNbImage {type = Trigger}
    Field StatusField {type = String}
    Field FieldPresentRegistration {type = String}
    Field RefImageFiled {type = Int value = 0}
    Field BackgroundTaskRunning {type = Bool}
    Field StopBackgroundTask {type = Bool}
    Field ExpertMode {type = Bool value = True}
    Field RegistrationMetric {internalName = mialImageReconstruction.MetricToUse}
    Field RegistrationGradient {internalName = mialImageReconstruction.GradientMagnitudeToleranceRegistration}
    Field RegistrationRelaxationFactor {internalName = mialImageReconstruction.RelaxationFactorRegistration}
    Field RegistrationMinStep {internalName = mialImageReconstruction.MinStepLengthRegistration}
    Field RegistrationMaxStep {internalName = mialImageReconstruction.MaxStepLengthRegistration}
    Field RegistrationNbIt {internalName = mialImageReconstruction.nbIterationsRegistration}
    Field FirstSDIDone {type = Bool value = false}
    Field insertOrientDone {type = Bool value = True}
    Field insertOrientNLMDone {type = Bool value = True}
    Field insertOrientMaskDone {type = Bool value = True}
    
    Field WaitForReconstruction {type = Bool value = False}
    Field WaitForSliceIntensity {type = Bool value = False}
    Field FromFrontier {type = Bool value = False}
    //Field temporaryMasksSwitch {type = MLBase }
  }
}


Description {
  Field NumberImages {
    min = 1
    max = 15
  }
  
  Field RefImageFiled {
    min = 0
    max = NumberImages-1
  }
  
}

Commands {
  //source = $(MLAB_MMS_Syngo)/Modules/Macros/FrontierStyle/FrontierStyle.py
  source = $(LOCAL)/ImageOrientationInterface.py
  //initCommand = initImageOrientationInterface
  //FieldListener cornerMenuIteraction {command = cornerMenuClicked}
  FieldListener fileSelectionCompleted {command = initImageOrientationGraphicsView}
  FieldListener resetAll {command = resetImages}
  FieldListener GestationalAge {command = updateCSOfromAdapt}
  
  //FieldListener of status field from backgroundTasks
  FieldListener mevisbtkDenoising.status {command ="py: updateBackgroundTaskStatus('Denoising')"}
  FieldListener mialOrientImage.status {command = "py: updateBackgroundTaskStatus('mialOrientImage')"}
  FieldListener mialCorrectSliceIntensity.status {command = "py: updateBackgroundTaskStatus('mialCorrectSliceIntensity')"}
  FieldListener mialSliceBySliceBiasEstimation.status {command = "py: updateBackgroundTaskStatus('mialBiasEstimation')"}
  FieldListener mialSliceBySliceBiasFieldCorrection.status {command = "py: updateBackgroundTaskStatus('mialBiasCorrection')"}
  FieldListener mialIntensityStandardization.status {command = "py: updateBackgroundTaskStatus('mialIntensityStandardization')"}
  FieldListener mialImageReconstruction.status {command = "py: updateBackgroundTaskStatus('mialImageReconstruction')"}
  
  FieldListener mevisbtkDenoising.inProgress {command = "py: updateBackgroundTaskRunningField()"}
  FieldListener mialOrientImage.inProgress {command = "py: updateBackgroundTaskRunningField()"}
  FieldListener mialOrientImageNLM.inProgress {command = "py: updateBackgroundTaskRunningField()"}
  FieldListener mialOrientImageMask.inProgress {command = "py: updateBackgroundTaskRunningField()"}
  FieldListener mialCorrectSliceIntensity.inProgress {command = "py: updateBackgroundTaskRunningField()"}
  FieldListener mialCorrectSliceIntensityNLM.inProgress {command = "py: updateBackgroundTaskRunningField()"}
  FieldListener mialCorrectSliceIntensityNLMPostBiasCorrection.inProgress {command = "py: updateBackgroundTaskRunningField()"}
  FieldListener mialCorrectSliceIntensityPostBiasCorrection.inProgress {command = "py: updateBackgroundTaskRunningField()"}
  FieldListener mialSliceBySliceBiasEstimation.inProgress {command = "py: updateBackgroundTaskRunningField()"}
  FieldListener mialSliceBySliceBiasFieldCorrection.inProgress {command = "py: updateBackgroundTaskRunningField()"}
  FieldListener mialIntensityStandardization.inProgress {command = "py: updateBackgroundTaskRunningField()"}
  FieldListener mialIntensityStandardizationNLM.inProgress {command = "py: updateBackgroundTaskRunningField()"}
  FieldListener mialIntensityStandardizationNLMBis.inProgress {command = "py: updateBackgroundTaskRunningField()"}
  FieldListener mialIntensityStandardizationBis.inProgress {command = "py: updateBackgroundTaskRunningField()"}
  FieldListener mialImageReconstruction.inProgress {command = "py: updateBackgroundTaskRunningField()"} 
  
  FieldListener mevisbtkDenoising.outputSucceed {command = "py: insertNLMDenoisingResults()"} //or next step instead of denoising ?
  FieldListener mialOrientImage.outputSucceed {command = "py: insertReOrient('RawImage')"} //runCorrectSliceIntensity('RawImage')"}
  FieldListener mialOrientImageNLM.outputSucceed {command = "py: insertReOrient('NLMImage')"} //runCorrectSliceIntensity('NLMImage')"}
  FieldListener mialOrientImageMask.outputSucceed {command = "py: insertReOrient('MaskImage')"} //nextStepBackgroundTask('mialOrientImageMask')"}
  FieldListener mialCorrectSliceIntensity.outputSucceed {command = "py: inserCorrectSliceIntensity('RawImage')"} //runSliceBySliceBiasEstimation()"}
  FieldListener mialCorrectSliceIntensityNLM.outputSucceed {command = "py: inserCorrectSliceIntensity('NLMImage')"}
  FieldListener mialCorrectSliceIntensityNLMPostBiasCorrection.outputSucceed {command = "py: inserCorrectSliceIntensity('NLMPostBiasCorrection')"}
  FieldListener mialCorrectSliceIntensityPostBiasCorrection.outputSucceed {command = "py: inserCorrectSliceIntensity('PostBiasCorrection')"}
  FieldListener mialSliceBySliceBiasEstimation.outputSucceed {command = "py: insertSliceBiasEstimation()"}
  FieldListener mialSliceBySliceBiasFieldCorrection.outputSucceed {command = "py: insertSliceBiasCorrection()"}
  FieldListener mialIntensityStandardization.outputSucceed {command = "py: runHistogramNormalization('RawImage')"}
  FieldListener mialIntensityStandardizationNLM.outputSucceed {command = "py: runHistogramNormalization('DenoisedImage')"}
  FieldListener mialIntensityStandardizationNLMBis.outputSucceed {command = "py: runMaskImage()"}
  FieldListener mialsrtkMaskImage.outputSucceed {command = "py: updateWaitForReconstrucion()"}
  FieldListener mialIntensityStandardizationBis.outputSucceed {command = "py: updateWaitForReconstrucion()"}
  FieldListener mialHistogramNormalization.outputSucceed {command = "py:insertHistogramNormalization('RawImages')"}
  FieldListener mialHistogramNormalizationNLM.outputSucceed {command = "py:insertHistogramNormalization('DenoisedImage')"} 
  FieldListener WaitForReconstruction {command = "py: runImageReconstruction()"}
  FieldListener mialImageReconstruction.outputSucceed {command = "py: insertImageReconstruction()"}
  FieldListener ExpertMode {command = showImageOrientationInterface}
  FieldListener RefImageFiled {command = updateRefImageReconstruction}
  
  //FieldListener View2DExtensions.annoReadPix.worldPosition {command = updateLabelPosition}
}

NetworkPanel {
  Button resetZoomButton {
    symbol  = "* "recycle" *"
    command = "py: resetZoom()"
  }
  Button increaseNbImage {
    symbol = "* "$(MLAB_mevisFetalMRI_MRUser)/Modules/Graphics/up-arrow-symbol-icon-68695.png" *"
    command = "py: modifyImageNumber(1)"
  }
  Button decreaseNbImage {
    symbol  = "* "$(MLAB_mevisFetalMRI_MRUser)/Modules/Graphics/down-arrow-symbol-icon-68695.png" *"
    command = "py: modifyImageNumber(-1)"
  }
}

Window ImageOrientationPanel {
  
  Splitter {
    direction = vertical
    //expandX = No
    Vertical
    {
      GraphicsView
      {
        name        = GraphicsView
        initCommand = initImageOrientationGraphicsView
        
        //expandX = No
      }

      expandY = yes
      //expandX = No
    
      Horizontal {
        Field GestationalAge {step = 1 tooltip = "Doesn't have to be the real gestational Age, it is used for the predefined mask of the brain, the mask has to include all brain, but can include a little more than the brain"}
        Button { title = "Choose manually the atlas" command = getAtlasManually tooltip = "if you want other mask than the predefined ones based on Gholipour A et. al (DOI: 10.1038/s41598-017-00525-w)"}
        CheckBox { title = "+/1 week from Gestational Age" enabled = False}
      }
      Horizontal {
        Button { title = "Help" command = showHelp}
      }
    }
    
    //expandX = No
    
    Box ViewerBox {
        title = ""
      
        Viewer viewer2D {
        name            = viewer
        clone           = NO
        preferredWidth  = 900
        preferredHeight = 500
        }
      
        EventFilter {
          //dependsOn = "eventChoice == 1"
          filter = "MouseButtonPress,KeyPress"
          control = viewer 
          command = button1PressedImOrient
        }
      
        /*EventFilter {
          dependsOn = "eventChoice == 2"
          filter  = "MouseButtonPress,KeyPress"
          control = viewer 
          command = button1PressedMaskRefine         
        }*/
      expandY = yes
    }
    
    
  }
  
}

Window LeftSide {
    
    //style = FrontierStyle
  Vertical
  {
    GraphicsView
    {
      name        = GraphicsView
      initCommand = initImageOrientationGraphicsView
        
      //expandX = No
    }

    expandY = yes
    //expandX = No
    
    Horizontal {
      Field GestationalAge {step = 1 tooltip = "Doesn't have to be the real gestational Age, it is used for the predefined mask of the brain, the mask has to include all brain, but can include a little more than the brain"}
      Button { title = "Choose manually the atlas" command = getAtlasManually tooltip = "if you want other mask than the predefined ones based on Gholipour A et. al (DOI: 10.1038/s41598-017-00525-w)"}
      CheckBox { title = "+/1 week from Gestational Age" enabled = False}
    }
    Horizontal {
      Button { title = "Help" command = showHelp}
    }
  }
  
}

Window RightSide {
  
  Box ViewerBox {
    title = ""
      
    Viewer viewer2D {
      name            = viewer
      clone           = NO
      preferredWidth  = 900
      preferredHeight = 500
    }
      
    EventFilter {
      //dependsOn = "eventChoice == 1"
      filter  = "MouseButtonPress,KeyPress"
      control = viewer 
      command = button1PressedImOrient
    }
      
    /*EventFilter {
    dependsOn = "eventChoice == 2"
    filter  = "MouseButtonPress,KeyPress"
    control = viewer 
    command = button1PressedMaskRefine         
    }*/
    expandY = yes
  }
    
    
}
  

